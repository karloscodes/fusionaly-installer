name: Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Install dependencies
        run: |
          make deps

      - name: Read version from .version
        id: version
        run: |
          VERSION=$(cat .version | tr -d '\n')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build binaries for AMD64 and ARM64 with version
        run: |
          make build-linux

      - name: Verify config/config.json exists
        run: |
          if [ ! -f config/config.json ]; then
            echo "Error: config/config.json not found"
            exit 1
          fi

      - name: Setup and authenticate Multipass
        run: |
          # Install multipass
          sudo apt update
          sudo apt install -y snapd
          sudo snap install multipass
          
          # Stop the multipass service
          sudo snap stop multipass
          
          # Remove any existing multipass data
          sudo rm -rf /var/snap/multipass/common/data/multipassd/*
          
          # Create directory for local socket and set permissions
          sudo mkdir -p /var/snap/multipass/common/multipass_socket
          sudo chmod 777 /var/snap/multipass/common/
          
          # Start multipass service
          sudo snap start multipass
          sleep 5
          
          # Create a local user and authenticate (non-interactive)
          cat > /tmp/multipass_config.yaml << EOF
          local:
            access-token: github-ci-token
          EOF
          sudo mkdir -p /root/.config/multipass/
          sudo cp /tmp/multipass_config.yaml /root/.config/multipass/
          
          # Authenticate as root (which should be auto-accepted due to config file)
          sudo multipass authenticate local
          
          # Copy the credentials to runner user
          mkdir -p ~/.config/multipass/
          sudo cp /root/.config/multipass/client.crt ~/.config/multipass/
          sudo cp /root/.config/multipass/client.key ~/.config/multipass/
          sudo chown -R $(whoami) ~/.config/multipass/
          
          # Test that multipass works now
          multipass version
          multipass list

      - name: Run integration tests
        env:
          LICENSE_KEY: "TEST-LICENSE-KEY"
          ENV: "test"
        run: |
          # Run make test with versioned binary
          make test

      - name: Multipass diagnostics (if tests failed)
        if: failure()
        run: |
          multipass list || true
          ls -la ~/.config/multipass/ || true
          snap services multipass || true

      - name: Cleanup Multipass VMs
        if: always()
        run: |
          multipass delete --all --purge || true

      - name: Create GitHub Release (on push to main)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="v${{ env.VERSION }}"
          gh release create "$TAG" \
            bin/infinity-metrics-v${{ env.VERSION }}-amd64 \
            bin/infinity-metrics-v${{ env.VERSION }}-arm64 \
            config/config.json \
            --title "Release v${{ env.VERSION }}" \
            --notes "Automated release with binaries and config.json for version ${{ env.VERSION }}" \
            --draft=false
        shell: bash
