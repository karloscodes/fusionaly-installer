name: Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Install dependencies
        run: |
          make deps

      - name: Read version from .version
        id: version
        run: |
          VERSION=$(cat .version | tr -d '\n')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build binaries for AMD64 and ARM64 with version
        run: |
          make build-linux

      - name: Verify config/config.json exists
        run: |
          if [ ! -f config/config.json ]; then
            echo "Error: config/config.json not found"
            exit 1
          fi

      - name: Install Multipass
        run: |
          sudo snap install multipass
          sudo snap refresh multipass
          sudo snap restart multipass
          
      - name: Configure Multipass permissions
        run: |
          # Allow GitHub runner user to access multipass
          sudo usermod -a -G snap_multipass,multipass runner || true
          sudo chmod -R 755 /var/snap/multipass/common/
          # Ensure multipass socket is accessible
          sudo chmod 755 /var/snap/multipass/common/multipass_socket || true
          # Wait for multipass to be ready
          sleep 5
          
      - name: Verify Multipass is running
        run: |
          sudo snap services multipass
          sudo multipass version
          sudo multipass list

      - name: Run integration tests
        env:
          LICENSE_KEY: "TEST-LICENSE-KEY"
          ENV: "test"
        run: |
          # Use sudo to run multipass commands
          export MULTIPASS_SUDO=1
          # Run make test with versioned binary
          make test

      - name: Cleanup Multipass VMs
        if: always()
        run: |
          sudo multipass delete infinity-test-vm --purge || true
          sudo multipass list

      - name: Create GitHub Release (on push to main)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="v${{ env.VERSION }}"
          gh release create "$TAG" \
            bin/infinity-metrics-v${{ env.VERSION }}-amd64 \
            bin/infinity-metrics-v${{ env.VERSION }}-arm64 \
            config/config.json \
            --title "Release v${{ env.VERSION }}" \
            --notes "Automated release with binaries and config.json for version ${{ env.VERSION }}" \
            --draft=false
        shell: bash
